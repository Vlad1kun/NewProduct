import telebot
from flask import Flask, request

from freeGPT import gpt3

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('6308503974:AAFWhjyFad6zuvljhsVN89eTJlyfKFtmREA')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è webhook, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç POST –∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram
@app.route('/', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
    bot.process_new_updates([update])
    return '', 200


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –º–æ–¥–µ–ª–∏ GPT-3.5 Turbo.')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_input = message.text

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏ GPT-3.5 Turbo
    async def process_user_input():
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ GPT-3.5 Turbo
            resp = await getattr(gpt3.Completion(), 'create')(prompt=user_input)
            print(f'ü§ñ: {resp.choices[0].text}')  # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
            bot.reply_to(message, f'ü§ñ: {resp.choices[0].text}')
        except Exception as e:
            print(f'ü§ñ: {e}')  # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∫–æ–Ω—Å–æ–ª—å
            bot.reply_to(message, f'ü§ñ: {e}')

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    gpt3.setup()
    gpt3.get_engine('text-davinci-003')
    gpt3.load_model('gpt-3.5-turbo')
    app.bot = bot
    app.user_input = user_input
    app.loop = asyncio.get_event_loop()
    app.loop.create_task(process_user_input())

    return '', 200


if __name__ == '__main__':
    app.run(port=5000, debug=True)
