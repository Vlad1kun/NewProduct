from flask import Flask, render_template
import requests
import freeGPT
from asyncio import run

async def main(text):
    prompt = '–ø–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å–∫–∏–π –∏ —Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–º —Å—Ç–∏–ª–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω –∏ –Ω–∞–ø–∏—Å–∞–Ω–æ —á–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ —Ç–æ —É–¥–∞–ª–∏ —ç—Ç–æ: ' + text #—Ç—ã –ñ—É—Ä–Ω–∞–ª–∏—Å—Ç —Å –æ–ø—ã—Ç–æ–º 10 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã,–ø–µ—Ä–µ–ø–∏—à–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∫—Ä–∞—Å–∏–≤–æ,–¥–æ–±–∞–≤—å —Å–º–∞–π–ª–∏–∫–∏,–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ –∏–ª–∏ —á—Ç–æ –≤ —Ç–∞–∫–æ–º –¥—É—Ö–µ —Ç–æ –∑–∞–∫–æ–Ω—á–∏ –µ–≥–æ, –ø–µ—Ä–µ–¥–∞–π –≥–ª–≤–Ω—É—é —Å—É—Ç—å –≤ 50 —Å–ª–æ–≤,–ø–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫, –ø–∏—à–∏ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–º –∏ –ø–æ–Ω—è—Ç–Ω–æ–º –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å—Ç–∏–ª–µ:
    try:
            resp = await getattr(freeGPT, "gpt3").Completion().create(prompt)
            return f" {resp}"
    except Exception as e:
            print(f"ü§ñ: {e}")

async def translate(text):
    prompt = '–ø–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å–∫–∏–π' + text 
    try:
            resp = await getattr(freeGPT, "gpt3").Completion().create(prompt)
            return f" {resp}"
    except Exception as e:
            print(f"ü§ñ: {e}")




app = Flask(__name__)
api_key = '093960e94efb4e6b98d7d0f62b042be8'  # –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_NEWS_API_KEY –Ω–∞ –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª—é—á News API
news_api_url = 'https://newsapi.org/v2/everything'
news_params = {
    'q': 'openai',    # –í–∞—à –∑–∞–ø—Ä–æ—Å
    'sortBy': 'publishedAt',
    'apiKey': api_key,
}

def get_news():
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ News API
    response = requests.get(news_api_url, params=news_params)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    data = response.json()
    
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π
    articles = []
    
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å—Ç–∞—Ç—å—è–º –≤ –¥–∞–Ω–Ω—ã—Ö –æ—Ç News API
    for article in data['articles']:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á 'description' –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–ø—É—Å—Ç—ã–º
        if 'description' in article and article['description']:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—á–∫–æ–π
            if article['description'][-1] == '.':
                # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é –≤ —Å–ø–∏—Å–æ–∫
                articles.append(article)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π
    return articles[:5]

@app.route('/')
def index():
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    articles = get_news()
    desq = [run(main(articles[0]['description'])), run(main(articles[1]['description'])), run(main(articles[2]['description'])), run(main(articles[3]['description'])), run(main(articles[4]['description']))]
    titles = [run(translate(articles[0]['title'])), run(translate(articles[1]['title'])), run(translate(articles[2]['title'])), run(translate(articles[3]['title'])), run(translate(articles[4]['title']))]
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —à–∞–±–ª–æ–Ω index.html –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π
    return render_template('index.html', articles=articles, titles=titles, desq=desq)

if __name__ == '__main__':
    app.run(debug=True)
